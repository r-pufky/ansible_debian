---
###############################################################################
# APT Management
###############################################################################
# Use DEB822 format.
#
# debian_apt_sources:
#     list of dict - ansible.builtin.deb822_repository.
#   - allow_downgrade_to_insecure: bool - allow downgrading a package that was
#           previously authenticated but is no longer authenticated.
#         Default: omit (system default).
#     allow_insecure: bool - allow insecure repositories
#         Default: omit (system default).
#     allow_weak: bool - allow repo signed with a key using a weak algorithm
#         Default: omit (system default).
#     architectures: list of str - architectures to search within repository
#         Default: omit (system default).
#     by_hash: bool - acquire indexes via a URI constructed from a hashsum of
#           the expected file instead of using the well-known stable filename.
#         Default: omit (system default).
#     check_date: bool - should APT consider the machine time correct?
#         Default: omit (system default).
#     check_valid_until: bool - should APT try to detect replay attacks?
#         Default: omit (system default).
#     components: list of str - components specify different sections of one
#           distribution version present in a Suite.
#         Default: omit (system default).
#     date_max_future: int - how far (days) in the future a repo may be
#         Default: omit (system default).
#     enabled: bool - enable source
#         Default: omit (system default).
#     inrelease_path: str - path to the InRelease file, relative to the normal
#           position of an InRelease file.
#         Default: omit (system default).
#     languages: list of str - which language information should be downloaded
#         Default: omit (system default).
#     mode: str - octal sources file permission
#         Default: '0644'
#     name: str - name of the repo (used for X-Repolib-Name, repo, signing key)
#     pdiffs: bool - use partial diffs to update old indexes
#         Default: omit (system default).
#     signed_by: str - URI, GPG key, ASCII armored GPG public block, absolute
#             keyring file path, or key fingerprints to verify repository.
#     state: str - state
#         Default: 'present'.
#     suites: list of str - specify an exact path in relation to the URI(s)
#           provided, in which case the Components: must be omitted and suite
#           must end with a slash (/). Alternatively, it may take the form of a
#           distribution version (e.g. a version codename like disco or
#           artful). If the suite does not specify a path, at least one
#           component must be present.
#         Default: omit (system default).
#     targets: list of str - download targets apt will try to acquire
#         Default: omit (system default).
#     trusted: bool - consider trusted or raise warnings when installed
#         Default: omit (system default).
#     types: list of str - types of packages from source (deb, deb-src)
#         Default: ['deb'].
#     uris: list of str - base Debian distribution archive
#
# Default:
#  - name: 'debian'
#    types:
#      - 'deb'
#      - 'deb-src'
#    uris: 'http://deb.debian.org/debian'
#    suites:
#      - 'bookworm'
#      - 'bookworm-updates'
#      - 'bookworm-backports'
#    components:
#      - 'main'
#      - 'contrib'
#      - 'non-free'
#      - 'non-free-firmware'
#    signed_by: '/usr/share/keyrings/debian-archive-keyring.gpg'
#  - name: 'debian-security'
#    types:
#      - 'deb'
#      - 'deb-src'
#    uris: 'http://deb.debian.org/debian-security'
#    suites:
#      - 'bookworm-security'
#    components:
#      - 'main'
#      - 'contrib'
#      - 'non-free'
#      - 'non-free-firmware'
#    signed_by: '/usr/share/keyrings/debian-archive-keyring.gpg'
#
# Reference:
# * https://wiki.debian.org/SourcesList
# * https://repolib.readthedocs.io/en/latest/deb822-format.html
# * https://manpages.debian.org/unstable/apt/sources.list.5.en.html
debian_apt_sources:
  - name: 'debian'
    types:
      - 'deb'
      - 'deb-src'
    uris: 'http://deb.debian.org/debian'
    suites:
      - 'bookworm'
      - 'bookworm-updates'
      - 'bookworm-backports'
    components:
      - 'main'
      - 'contrib'
      - 'non-free'
      - 'non-free-firmware'
    signed_by: '/usr/share/keyrings/debian-archive-keyring.gpg'
  - name: 'debian-security'
    types:
      - 'deb'
      - 'deb-src'
    uris: 'http://deb.debian.org/debian-security'
    suites:
      - 'bookworm-security'
    components:
      - 'main'
      - 'contrib'
      - 'non-free'
      - 'non-free-firmware'
    signed_by: '/usr/share/keyrings/debian-archive-keyring.gpg'

# Should apt dist-upgrade be run after sources are modified? Default: True.
debian_apt_dist_upgrade_enable: true

###############################################################################
# Package Management
###############################################################################
# Packages are applied in this order:
#
#   install: core -> container -> vm -> additional
#   remove: core -> container -> vm -> additional

# Packages to apply to ALL systems managed by this role.
#
# Default:
#   - 'vim'
#   - 'git'
#   - 'git-lfs'
#   - 'curl'
#   - 'htop'
#   - 'tmux'
debian_core_packages:
  - 'vim'
  - 'git'
  - 'git-lfs'
  - 'curl'
  - 'htop'
  - 'tmux'

# Packages to remove from ALL systems managed by this role.
#
# Default: ['mdadm'].
debian_core_packages_absent:
  - 'mdadm'

# Additional packages (usually per-host) to install. Default: [].
debian_packages: []

# Additional packages (usually per-host) to remove. Default: [].
debian_packages_absent: []

# Packages to apply to ALL containers.
#
# Containers are detected via ansible_virtualization_role.
#
# Default: ['rng-tools', 'haveged'].
debian_container_packages:
  - 'rng-tools5'  # https://packages.debian.org/bookworm/rng-tools5
  - 'haveged'  # https://packages.debian.org/bookworm/haveged

# Packages to remove from ALL containers.
#
# Containers are detected via ansible_virtualization_role.
#
# Default: [].
debian_container_packages_absent: []

# Packages to apply to ALL virtual machines.
#
# Virtual machines are detected via ansible_virtualization_role.
#
# Default: ['haveged'].
debian_vm_packages:
  - 'haveged'  # https://packages.debian.org/bookworm/haveged

# Packages to remove from ALL virtual machines.
#
# Virtual machines are detected via ansible_virtualization_role.
#
# Default: [].
debian_vm_packages_absent: []

###############################################################################
# Unattended Periodic Configuration
###############################################################################
# Configures the intervals at which unattended upgrades run.

# Enabled periodic upgrades and updates. Default: True.
debian_unattended_enable: true

# Only install updates unattended when on AC power. Default: False.
debian_unattended_ac_only_enable: false

# Archive backup if changed within interval (days). Default: 0 (disabled).
debian_unattended_backup_archive_interval: 0

# Number of archive backups to keep.
#
# Values:
#   0: disabled
#   1: invalid; must be disabled or 2+
#   2: 2 previous versions
#   3: 3 previous versions
#
# Default: 3.
debian_unattended_backup_level: 3

# Keep cached files younger than min age (days). Default: 0 (disabled).
debian_unattended_min_age: 0

# Remove cached files older than max age (days). Default: 0 (disabled).
debian_unattended_max_age: 0

# Max cache size (oldest cache packages deleted first) (MB).
#
# Default: 0 (disabled).
debian_unattended_max_size: 0

# Update package list interval (days), 0 disables. Default: 1.
debian_unattended_update_package_list: 1

# Download upgradable packages interval (days). Default: 0 (disabled).
debian_unattended_download_upgradeable_packages: 0

# Run unattended upgrades interval (days), 0 disables. Default: 1.
debian_unattended_upgrades: 1

# Autoclean interval (days), 0 disables. Default: 7.
debian_unattended_autoclean_interval: 7

# Clean interval (days). Default: 0 (disabled).
debian_unattended_clean_interval: 0

# Root reporting verbosity.
#
# Values:
#   0: no report
#   1: progress report
#   2: progress, command outputs
#   3: progress, command outputs, trace on
#
# Default: 0.
debian_unattended_periodic_verbose: 0

# Randomly wait up to interval before starting (seconds). Default: 1800.
debian_unattended_random_sleep: 1800

###############################################################################
# Unattended Upgrades
###############################################################################

# Unattended upgrades origins pattern.
#
# A package will be upgraded only if the values in its metadata match all the
# supplied keywords in a line. (In other words, omitted keywords are wild
# cards (*)). The keywords originate from the Release file.
#
# 'apt-cache policy' will print the available values. Debug with
# 'unattended-upgrades -d' and looking at the log file.
#
# Special Case:
#         ${distro_id}: Installed origin macro from /etc/debian_version
#   ${distro_codename}: Installed codename macro from /etc/debian_version
#               {OMIT}: omitted keywords are wildcards
#
# debian_unattended_upgrade_origins_pattern:
#     list of dict - release specification; macros may be used. Omitted
#                    keywords are wildcards.
#   - archive: str - (optional) archive/suite/a
#     component: str - (optional) component/c
#     label: str - (optional) label/l
#     origin: str - (optional) origin/o
#     codename: str - (optional) codename/n
#     site: str - (optional) website
#
# debian_unattended_upgrade_origins_pattern:
#   - origin: 'debian'
#     archive: 'stable'
#   - origin: 'debian'
#     archive: 'stable-updates'
#   - origin: 'debian'
#     archive: 'proposed-updates'
#   - origin: 'Debian Backports'
#     archive: '${distro_codename}-backports'
#     label: 'Debian Backports'
#
# Default:
#   - origin: 'Debian'
#     codename: 'S(distro_codename)-updates'
#   - origin: 'Debian'
#     codename: '${distro_codename}'
#     label: 'Debian'
#   - origin: 'Debian'
#     codename: '${distro_codename}'
#     label: 'Debian-Security'
#   - origin: 'Debian'
#     codename: '${distro_codename}-security'
#     label: 'Debian-Security'
#
# Reference:
# * /etc/apt/apt.conf.d/50unattended-upgrades
debian_unattended_upgrade_origins_pattern:
  - origin: 'Debian'
    codename: 'S(distro_codename)-updates'
  - origin: 'Debian'
    codename: '${distro_codename}'
    label: 'Debian'
  - origin: 'Debian'
    codename: '${distro_codename}'
    label: 'Debian-Security'
  - origin: 'Debian'
    codename: '${distro_codename}-security'
    label: 'Debian-Security'

# Package blacklist.
#
# Python regular expressions matching packages to exclude.
#
# Special Case:
#     {MATCH}: strings matched from start by default. The following matches all
#              packages starting with linux-: 'linux-'.
#           $: use $ to explicitly define the end of a package name. Without
#              the $, 'libc6' would match all of them:
#                - 'libc6$'
#                - 'libc6-dev$'
#                - 'libc6-i686$'
#   {SPECIAL}: special characters need escaping: "libstdc\+\+6$"
#
# The following matches packages like xen-system-amd64, xen-utils-4.1,
# xenstore-utils and libxenstore3.0: '(lib)?xen(store)?'.
#
# debian_unattended_package_blacklist:
#   - 'linux-'
#   - 'libc6-i686$'
#   - 'libstdc\+\+6$'
#   - '(lib)?xen(store)?'
#
# Default: [] (disabled).
#
# Reference:
# * https://docs.python.org/3/howto/regex.html
debian_unattended_package_blacklist: []

# Autofix interrupted dpkg installs?
#
# On a unclean dpkg exit unattended-upgrades will run
# 'dpkg --force-confold --configure -a' to ensure updates keep getting
# installed.
#
# Default: True.
debian_unattended_autofix_interrupted_dpkg: true

# Use minimal steps so upgrades can be interrupted? Default: True.
debian_unattended_minimal_steps: true

# Install upgrades on shutdown instead of background? Default: False.
debian_unattended_install_on_shutdown: false

# Send email to this address for problems or packages upgrades.
#
# Default: '' (disabled).
debian_unattended_mail: ''

# Upgrade mail reporting threshold.
#
# Values:
#          always: always send mail for any actions
#   only-on-error: only mail on error
#       on-change: only mail on changes
#
# Default: 'only-on-error'.
debian_unattended_mail_report: 'only-on-error'

# Automatically remove unused kernel-related packages? Default: True.
debian_unattended_remove_unused_kernel_packages: true

# Remove any new unused dependencies after the upgrade? Default: True.
debian_unattended_remove_new_unused_dependencies: true

# Automatically remove all unused dependencies after the upgrade?
#
# Equivalent to 'apt get autoremove'.
#
# Default: True.
debian_unattended_remove_unused_dependencies: false

# Automatically reboot if required? Default: False.
debian_unattended_automatic_reboot: false

# Automatically reboot even if users are logged in? Default: True.
debian_unattended_automatic_reboot_with_users: true

# Reboot at specific time instead of immediately (HH:MM).
#
# Special Case:
#   now: (reboot immediately).
#
# Default: 'now'.
debian_unattended_automatic_reboot_time: 'now'

# Download and install upgrades only on AC power? Default: False.
debian_unattended_only_on_ac_power: true

# Limit apt bandwdith for downloads (KB). Default: 0 (no limit).
debian_unattended_dl_limit: 0

# Enable logging to syslog. Default: False.
debian_unattended_syslog_enable: false

# Specify syslog facility. Default: 'daemon'.
debian_unattended_syslog_facility: 'daemon'

# Skip updates on metered connections? Default: True.
debian_unattended_skip_updates_on_metered_connections: true

# Verbose logging? Default: False.
debian_unattended_verbose: false

# Print debug logging? Default: False.
debian_unattended_debug: false

# Allow downgrades if Pin-Priority exceeds 1000? Default: False.
debian_unattended_allow_downgrade: false

# Allow apt mark fallback?
#
# When APT fails to mark a package to be upgraded or installed try adjusting
# candidates of related packages to help APT's resolver in finding a solution
# where the package can be upgraded or installed. This is a workaround until
# APT's resolver is fixed to always find a solution if it exists. (See Debian
# bug #711128.)
#
# Disabling the fallback speeds up unattended-upgrades when there are
# uninstallable packages at the expense of rarely keeping back packages which
# could be upgraded or installed.
#
# Default: True.
debian_unattended_allow_apt_mark_fallback: true
