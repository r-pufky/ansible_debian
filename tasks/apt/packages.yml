---
# yamllint disable rule:line-length
###############################################################################
# Install packages.
###############################################################################
# Packages are applied from os progressing down to bare metal, then additional.
#
#   install: core -> container -> vm -> additional
#   remove: core -> container -> vm -> additional
#
# Reference:
# * https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/facts/virtual/linux.py

- name: 'Apt | packages | install role packages'
  ansible.builtin.apt:
    name: '{{ debian_role_packages }}'
    state: '{{ debian_role_package_state }}'
  when: debian_role_packages

- name: 'Apt | packages | install core packages'
  ansible.builtin.apt:
    name: '{{ debian_core_packages }}'
    state: '{{ debian_role_package_state }}'
  when: debian_core_packages

- name: 'Apt | packages | install container packages'
  ansible.builtin.apt:
    name: '{{ debian_container_packages }}'
    state: '{{ debian_role_package_state }}'
  when: >
    debian_container_packages and
    ansible_virtualization_role == 'guest'

- name: 'Apt | packages | install vm packages'
  ansible.builtin.apt:
    name: '{{ debian_vm_packages }}'
    state: '{{ debian_role_package_state }}'
  when: >
    debian_vm_packages and
    ansible_virtualization_role == 'host'

- name: 'Apt | packages | install additional packages'
  ansible.builtin.apt:
    name: '{{ debian_packages }}'
    state: '{{ debian_role_package_state }}'
  when: debian_packages

- name: 'Apt | packages | remove core packages'
  ansible.builtin.apt:
    name: '{{ debian_core_packages_absent }}'
    state: 'absent'
  when: debian_core_packages_absent

- name: 'Apt | packages | remove container packages'
  ansible.builtin.apt:
    name: '{{ debian_container_packages_absent }}'
    state: 'absent'
  when: >
    debian_container_packages_absent and
    ansible_virtualization_role == 'guest'

- name: 'Apt | packages | remove vm packages'
  ansible.builtin.apt:
    name: '{{ debian_vm_packages_absent }}'
    state: 'absent'
  when: >
    debian_vm_packages_absent and
    ansible_virtualization_role == 'role'

- name: 'Apt | packages | remove additional packages'
  ansible.builtin.apt:
    name: '{{ debian_packages_absent }}'
    state: 'absent'
  when: debian_packages_absent
